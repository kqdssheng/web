"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3169],{28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(96540);const i={},t=s.createContext(i);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:n},e.children)}},28465:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Linux/OpenSSL \u547d\u4ee4\u603b\u7ed3","title":"OpenSSL \u547d\u4ee4\u603b\u7ed3","description":"\u7591\u4eca\u8005\u5bdf\u4e4b\u53e4\uff0c\u4e0d\u77e5\u6765\u8005\u89c6\u4e4b\u5f80\u3002","source":"@site/docs/Linux/OpenSSL \u547d\u4ee4\u603b\u7ed3.md","sourceDirName":"Linux","slug":"/Linux/OpenSSL \u547d\u4ee4\u603b\u7ed3","permalink":"/web/docs/Linux/OpenSSL \u547d\u4ee4\u603b\u7ed3","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Linux \u7279\u6743 SUID_SGID \u7684\u8be6\u89e3","permalink":"/web/docs/Linux/Linux \u7279\u6743 SUID_SGID \u7684\u8be6\u89e3"},"next":{"title":"Socat \u547d\u4ee4\u603b\u7ed3","permalink":"/web/docs/Linux/Socat \u547d\u4ee4\u603b\u7ed3"}}');var i=r(74848),t=r(28453);const a={},o=void 0,l={},c=[{value:"\u5bfc\u822a",id:"\u5bfc\u822a",level:2},{value:"<div>\u4ecb\u7ecd</div>",id:"\u4ecb\u7ecd",level:2},{value:"<div>\u5bf9\u79f0\u52a0\u5bc6</div>",id:"\u5bf9\u79f0\u52a0\u5bc6",level:2},{value:"\uff08x\uff09openssl\u5b50\u547d\u4ee4enc\u4e3a\u5bf9\u79f0\u52a0\u89e3\u5bc6\u5de5\u5177\u3002",id:"xopenssl\u5b50\u547d\u4ee4enc\u4e3a\u5bf9\u79f0\u52a0\u89e3\u5bc6\u5de5\u5177",level:4},{value:"<div>\u516c\u94a5\u52a0\u5bc6</div>",id:"\u516c\u94a5\u52a0\u5bc6",level:2},{value:"\uff081\uff09openssl\u5b50\u547d\u4ee4genrsa\u4e3b\u8981\u7528\u4e8e\u751f\u6210RSA\u79c1\u94a5\u3002",id:"1openssl\u5b50\u547d\u4ee4genrsa\u4e3b\u8981\u7528\u4e8e\u751f\u6210rsa\u79c1\u94a5",level:4},{value:"\uff082\uff09openssl\u5b50\u547d\u4ee4rsa\u7528\u4e8e\u5904\u7406rsa\u5bc6\u94a5\uff08\u63d0\u53d6\u516c\u94a5\u3001\u7ba1\u7406\u4fdd\u62a4\u5bc6\u7801\uff09\u3001\u683c\u5f0f\u8f6c\u6362\u548c\u6253\u5370\u4fe1\u606f\u3002",id:"2openssl\u5b50\u547d\u4ee4rsa\u7528\u4e8e\u5904\u7406rsa\u5bc6\u94a5\u63d0\u53d6\u516c\u94a5\u7ba1\u7406\u4fdd\u62a4\u5bc6\u7801\u683c\u5f0f\u8f6c\u6362\u548c\u6253\u5370\u4fe1\u606f",level:4},{value:"\uff083\uff09openssl\u5b50\u547d\u4ee4rsautl\u80fd\u591f\u4f7f\u7528RSA\u7b97\u6cd5\u7b7e\u540d\u3001\u9a8c\u8bc1\u8eab\u4efd\u3001\u52a0\u5bc6/\u89e3\u5bc6\u6570\u636e\u3002",id:"3openssl\u5b50\u547d\u4ee4rsautl\u80fd\u591f\u4f7f\u7528rsa\u7b97\u6cd5\u7b7e\u540d\u9a8c\u8bc1\u8eab\u4efd\u52a0\u5bc6\u89e3\u5bc6\u6570\u636e",level:4},{value:"<div>\u4fe1\u606f\u6458\u8981</div>",id:"\u4fe1\u606f\u6458\u8981",level:2},{value:"\uff08x\uff09openssl\u5b50\u547d\u4ee4dgst\u4e3a\u4fe1\u606f\u6458\u8981\u8ba1\u7b97\u5de5\u5177\u3002",id:"xopenssl\u5b50\u547d\u4ee4dgst\u4e3a\u4fe1\u606f\u6458\u8981\u8ba1\u7b97\u5de5\u5177",level:4},{value:"<div>\u6570\u5b57\u8bc1\u4e66</div>",id:"\u6570\u5b57\u8bc1\u4e66",level:2},{value:"\uff081\uff09openssl\u5b50\u547d\u4ee4req\u7528\u4e8e\u751f\u6210\u548c\u5904\u7406\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6\u53ca\u8bc1\u4e66",id:"1openssl\u5b50\u547d\u4ee4req\u7528\u4e8e\u751f\u6210\u548c\u5904\u7406\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6\u53ca\u8bc1\u4e66",level:4},{value:"\uff082\uff09openssl\u5b50\u547d\u4ee4X509\u547d\u4ee4\u662f\u4e00\u4e2a\u591a\u7528\u9014\u7684\u8bc1\u4e66\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u663e\u793a\u8bc1\u4e66\u4fe1\u606f\u3001\u8f6c\u6362\u8bc1\u4e66\u683c\u5f0f\u3001\u7b7e\u540d\u8bc1\u4e66\u8bf7\u6c42\u4ee5\u53ca\u6539\u53d8\u8bc1\u4e66\u7684\u4fe1\u4efb\u8bbe\u7f6e\u7b49\u3002",id:"2openssl\u5b50\u547d\u4ee4x509\u547d\u4ee4\u662f\u4e00\u4e2a\u591a\u7528\u9014\u7684\u8bc1\u4e66\u5de5\u5177\u5b83\u53ef\u4ee5\u663e\u793a\u8bc1\u4e66\u4fe1\u606f\u8f6c\u6362\u8bc1\u4e66\u683c\u5f0f\u7b7e\u540d\u8bc1\u4e66\u8bf7\u6c42\u4ee5\u53ca\u6539\u53d8\u8bc1\u4e66\u7684\u4fe1\u4efb\u8bbe\u7f6e\u7b49",level:4},{value:"<div>\u6742\u9879</div>",id:"\u6742\u9879",level:2},{value:"\uff081\uff09openssl\u5b50\u547d\u4ee4rand\u7528\u4e8e\u751f\u6210\u4f2a\u968f\u673a\u6570",id:"1openssl\u5b50\u547d\u4ee4rand\u7528\u4e8e\u751f\u6210\u4f2a\u968f\u673a\u6570",level:4},{value:"\uff082\uff09openssl\u5b50\u547d\u4ee4passwd\u7528\u4e8e\u751f\u6210Linux\u7528\u6237\u8d26\u6237\u7684\u5bc6\u7801\u683c\u5f0f",id:"2openssl\u5b50\u547d\u4ee4passwd\u7528\u4e8e\u751f\u6210linux\u7528\u6237\u8d26\u6237\u7684\u5bc6\u7801\u683c\u5f0f",level:4},{value:"\uff083\uff09openssl\u5b50\u547d\u4ee4verify\u7528\u4e8e\u9a8c\u8bc1\u6388\u6743\u673a\u6784\u9881\u53d1\u7684\u8bc1\u4e66",id:"3openssl\u5b50\u547d\u4ee4verify\u7528\u4e8e\u9a8c\u8bc1\u6388\u6743\u673a\u6784\u9881\u53d1\u7684\u8bc1\u4e66",level:4},{value:"\uff084\uff09 openssl\u5b50\u547d\u4ee4s_server\u548cs_client\u7684\u4f7f\u7528",id:"4-openssl\u5b50\u547d\u4ee4s_server\u548cs_client\u7684\u4f7f\u7528",level:4},{value:"\uff085\uff09\u53c2\u8003\u6587\u6863",id:"5\u53c2\u8003\u6587\u6863",level:4}];function p(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h4:"h4",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u7591\u4eca\u8005\u5bdf\u4e4b\u53e4\uff0c\u4e0d\u77e5\u6765\u8005\u89c6\u4e4b\u5f80\u3002"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\u5bfc\u822a",children:"\u5bfc\u822a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#jieshao",children:"\u4ecb\u7ecd"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#duichengjiami",children:"\u5bf9\u79f0\u52a0\u5bc6"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#gongyaojiami",children:"\u516c\u94a5\u52a0\u5bc6"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#xinxizhaiyao",children:"\u4fe1\u606f\u6458\u8981"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#shuzizhengshu",children:"\u6570\u5b57\u8bc1\u4e66"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"#zaxiang",children:"\u6742\u9879"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\u4ecb\u7ecd",children:(0,i.jsx)("div",{id:"jieshao",children:"\u4ecb\u7ecd"})}),"\n",(0,i.jsx)(n.p,{children:"\u5bc6\u7801\u5b66\u6807\u51c6\u548c\u4e92\u8054\u7f51\u534f\u8bae\u4e00\u6837\uff0c\u662f\u4e00\u79cd\u5927\u5bb6\u90fd\u9075\u5b88\u7684\u7ea6\u5b9a\u548c\u6807\u51c6\uff0c\u6bd4\u5982PKCS#\u4e2d\u89c4\u5b9a\u4e86 RSA \u79d8\u94a5\u662f\u600e\u4e48\u751f\u6210\u7684\u3001\u516c\u79c1\u94a5\u7684\u683c\u5f0f \u7b49\u5185\u5bb9\uff0cx509\u6807\u51c6\u89c4\u5b9a\u4e86\u8bc1\u4e66\u7684\u683c\u5f0f\u7b49\u3002\r\n\u547d\u4ee4\u884cOpenSSL \u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u5de5\u5177\u96c6\uff0c\u5b83\u6309\u7167\u4e3b\u6d41\u7684\u5bc6\u7801\u5b66\u6807\u51c6\u5b9e\u73b0\u4e86\u5e38\u7528\u7684\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u3001\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u3001\u6458\u8981\u7b97\u6cd5\u3001\u8bc1\u4e66\u7684\u751f\u6210/\u7b7e\u540d/\u9a8c\u7b7e\u7b49\u529f\u80fd\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ openssl --help\r\nhelp:\r\n\r\n// openssl\u6240\u6709\u5b50\u547d\u4ee4\r\nStandard commands\r\nasn1parse         ca                ciphers           cmp\r\ncms               crl               crl2pkcs7         dgst\r\ndhparam           dsa               dsaparam          ec\r\necparam           enc               engine            errstr\r\nfipsinstall       gendsa            genpkey           genrsa\r\nhelp              info              kdf               list\r\nmac               nseq              ocsp              passwd\r\npkcs12            pkcs7             pkcs8             pkey\r\npkeyparam         pkeyutl           prime             rand\r\nrehash            req               rsa               rsautl\r\ns_client          s_server          s_time            sess_id\r\nsmime             speed             spkac             srp\r\nstoreutl          ts                verify            version\r\nx509\r\n\r\n// openssl\u652f\u6301\u7684\u6458\u8981\u7b97\u6cd5\r\nMessage Digest commands (see the `dgst' command for more details)\r\nblake2b512        blake2s256        md4               md5\r\nrmd160            sha1              sha224            sha256\r\nsha3-224          sha3-256          sha3-384          sha3-512\r\nsha384            sha512            sha512-224        sha512-256\r\nshake128          shake256          sm3\r\n\r\n// openssl\u652f\u6301\u7684\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\r\nCipher commands (see the `enc' command for more details)\r\naes-128-cbc       aes-128-ecb       aes-192-cbc       aes-192-ecb\r\naes-256-cbc       aes-256-ecb       aria-128-cbc      aria-128-cfb\r\naria-128-cfb1     aria-128-cfb8     aria-128-ctr      aria-128-ecb\r\naria-128-ofb      aria-192-cbc      aria-192-cfb      aria-192-cfb1\r\naria-192-cfb8     aria-192-ctr      aria-192-ecb      aria-192-ofb\r\naria-256-cbc      aria-256-cfb      aria-256-cfb1     aria-256-cfb8\r\naria-256-ctr      aria-256-ecb      aria-256-ofb      base64\r\nbf                bf-cbc            bf-cfb            bf-ecb\r\nbf-ofb            camellia-128-cbc  camellia-128-ecb  camellia-192-cbc\r\ncamellia-192-ecb  camellia-256-cbc  camellia-256-ecb  cast\r\ncast-cbc          cast5-cbc         cast5-cfb         cast5-ecb\r\ncast5-ofb         des               des-cbc           des-cfb\r\ndes-ecb           des-ede           des-ede-cbc       des-ede-cfb\r\ndes-ede-ofb       des-ede3          des-ede3-cbc      des-ede3-cfb\r\ndes-ede3-ofb      des-ofb           des3              desx\r\nrc2               rc2-40-cbc        rc2-64-cbc        rc2-cbc\r\nrc2-cfb           rc2-ecb           rc2-ofb           rc4\r\nrc4-40            seed              seed-cbc          seed-cfb\r\nseed-ecb          seed-ofb          sm4-cbc           sm4-cfb\r\nsm4-ctr           sm4-ecb           sm4-ofb\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\u5bf9\u79f0\u52a0\u5bc6",children:(0,i.jsx)("div",{id:"duichengjiami",children:"\u5bf9\u79f0\u52a0\u5bc6"})}),"\n",(0,i.jsxs)(n.p,{children:["\u5bf9\u79f0\u5bc6\u94a5\u7b97\u6cd5\u5728\u52a0\u5bc6\u548c\u89e3\u5bc6\u65f6\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u94a5\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u7c7b\u7b97\u6cd5\u4f17\u591a\u53ef\u901a\u8fc7",(0,i.jsx)(n.code,{children:"openssl list -cipher-commands"}),"\u5177\u4f53\u67e5\u770b\u3002"]}),"\n",(0,i.jsx)(n.h4,{id:"xopenssl\u5b50\u547d\u4ee4enc\u4e3a\u5bf9\u79f0\u52a0\u89e3\u5bc6\u5de5\u5177",children:"\uff08x\uff09openssl\u5b50\u547d\u4ee4enc\u4e3a\u5bf9\u79f0\u52a0\u89e3\u5bc6\u5de5\u5177\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ openssl enc --help\r\nUsage: enc [options]\r\n\r\nGeneral options:\r\n -help               Display this summary\r\n -list               List ciphers\r\n -ciphers            Alias for -list\r\n -e                  Encrypt\r\n -d                  Decrypt\r\n -p                  Print the iv/key\r\n -P                  Print the iv/key and exit\r\n -engine val         Use engine, possibly a hardware device\r\n\r\nInput options:\r\n -in infile          Input file\r\n -k val              Passphrase\r\n -kfile infile       Read passphrase from file\r\n\r\nOutput options:\r\n -out outfile        Output file\r\n -pass val           Passphrase source\r\n -v                  Verbose output\r\n -a                  Base64 encode/decode, depending on encryption flag\r\n -base64             Same as option -a\r\n -A                  Used with -[base64|a] to specify base64 buffer as a single line\r\n\r\nEncryption options:\r\n -nopad              Disable standard block padding\r\n -salt               Use salt in the KDF (default)\r\n -nosalt             Do not use salt in the KDF\r\n -debug              Print debug info\r\n -bufsize val        Buffer size\r\n -K val              Raw key, in hex\r\n -S val              Salt, in hex\r\n -iv val             IV in hex\r\n -md val             Use specified digest to create a key from the passphrase\r\n -iter +int          Specify the iteration count and force use of PBKDF2\r\n -pbkdf2             Use password-based key derivation function 2\r\n -none               Don't encrypt\r\n -*                  Any supported cipher\r\n\r\nRandom state options:\r\n -rand val           Load the given file(s) into the random number generator\r\n -writerand outfile  Write random data to the specified file\r\n\r\nProvider options:\r\n -provider-path val  Provider load path (must be before 'provider' argument if required)\r\n -provider val       Provider to load (can be specified multiple times)\r\n -propquery val      Property query used when fetching algorithms\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e00\uff1a\u4f7f\u7528\u4e00\u79cd\u52a0\u5bc6\u7b97\u6cd5\u52a0\u5bc6\u6587\u4ef6"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u901a\u8fc7aes-128-cbc\u5bf9\u79f0\u5bc6\u94a5\u7b97\u6cd5\u5bf9\u6587\u4ef6test.txt\u8fdb\u884c\u52a0\u5bc6\uff0c\u5171\u4eab\u5bc6\u94a5\u662fpass\uff0c\u8f93\u51fa\u6587\u4ef6\u662ftest-aes-enc.txt\u3002\r\nopenssl enc -e -aes-128-cbc -in test.txt -k pass -out test-aes-enc.txt -v\r\n\r\n// \u901a\u8fc7aes-128-cbc\u5bf9\u79f0\u5bc6\u94a5\u7b97\u6cd5\u5bf9\u6587\u4ef6test-aes-enc.txt\u8fdb\u884c\u89e3\u5bc6\uff0c\u5171\u4eab\u5bc6\u94a5\u662fpass\uff0c\u8f93\u51fa\u6587\u4ef6\u662ftest-aes-dec.txt\u3002\r\nopenssl enc -d -aes-128-cbc -in test-aes-enc.txt -k 123 -out test-aes-dec.txt -v\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e8c\uff1a\u4f7f\u7528base64\u52a0\u5bc6\u7b97\u6cd5\u52a0\u5bc6\u5b57\u7b26\u4e32"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'// \u5bf9\u5b57\u7b26\u4e32\u8fdb\u884cbase64\u7f16\u7801\r\necho -n "12345" | openssl enc -e -base64 -in -\r\n\r\n// \u5bf9\u5b57\u7b26\u4e32\u8fdb\u884cbase64\u89e3\u7801\r\necho "MTIzNDU=" | openssl enc -d -base64 -in -\r\n\r\n\u6ce8\u610f\uff1a\u5b57\u7b26\u4e32\u7f16\u7801\u65f6\u5982\u679cecho\u4e0d\u52a0-n\u5219\u4f1a\u5728\u5b57\u7b26\u4e32\u7ed3\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u6362\u884c\u7b26\uff0c\u90a3\u4e48\u6362\u884c\u7b26\u4e5f\u4f1a\u4e00\u5757\u7f16\u7801\u3002\n'})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e09\uff1a\u52a0\u5bc6\u6587\u4ef6\u5e76\u5c06\u5bc6\u6587\u8f93\u51fa\u4e3abase64\u683c\u5f0f"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u5bf9\u52a0\u5bc6\u540e\u7684\u6570\u636e\u8fdb\u884cbase64\u7f16\u7801(-a\u6216-base64)\r\nopenssl enc -aes-256-cbc -a -salt -in file.txt -out file.enc\r\n\r\n// \u89e3\u5bc6base64\u683c\u5f0f\u7684\u52a0\u5bc6\u6570\u636e\r\nopenssl enc -d -aes-256-cbc -a -in file.enc\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\u516c\u94a5\u52a0\u5bc6",children:(0,i.jsx)("div",{id:"gongyaojiami",children:"\u516c\u94a5\u52a0\u5bc6"})}),"\n",(0,i.jsx)(n.p,{children:"\u516c\u94a5\u5bc6\u94a5\u7b97\u6cd5\u5728\u52a0\u5bc6\u548c\u89e3\u5bc6\u65f6\u5206\u522b\u4f7f\u7528\u4e0d\u540c\u7684\u5bc6\u94a5\u8fdb\u884c\u5904\u7406\uff08\u4e00\u822c \u516c\u94a5\u52a0\u5bc6\uff0c\u79c1\u94a5\u89e3\u5bc6\uff1b\u800c\u7b7e\u540d\u5219\u76f8\u53cd\uff1a\u79c1\u94a5\u52a0\u5bc6\uff0c\u516c\u94a5\u89e3\u5bc6\uff09\uff0c\u8fd9\u7c7b\u7b97\u6cd5\u76ee\u524d\u53ea\u652f\u6301DH\u7b97\u6cd5\u3001RSA\u7b97\u6cd5\u3001DSA\u7b97\u6cd5\u548c\u692d\u5706\u66f2\u7ebf\u7b97\u6cd5\uff08EC\uff09\u3002DH\u7b97\u6cd5\u4e00\u822c\u7528\u4e8e\u5bc6\u94a5\u4ea4\u6362\u3002RSA\u7b97\u6cd5\u53ef\u7528\u4e8e\u5bc6\u94a5\u4ea4\u6362\u3001\u6570\u5b57\u7b7e\u540d\u53ca\u6570\u636e\u52a0\u5bc6\u3002DSA\u7b97\u6cd5\u4e00\u822c\u53ea\u7528\u4e8e\u6570\u5b57\u7b7e\u540d\u3002\u6b64\u5904\u53ea\u91cd\u70b9\u4ecb\u7ecdRSA\u76f8\u5173\u6307\u4ee4genrsa\u3001rsa\u3001rsautl\u7684\u4f7f\u7528\u3002"}),"\n",(0,i.jsx)(n.h4,{id:"1openssl\u5b50\u547d\u4ee4genrsa\u4e3b\u8981\u7528\u4e8e\u751f\u6210rsa\u79c1\u94a5",children:"\uff081\uff09openssl\u5b50\u547d\u4ee4genrsa\u4e3b\u8981\u7528\u4e8e\u751f\u6210RSA\u79c1\u94a5\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ openssl genrsa --help\r\nUsage: genrsa [options] numbits\r\n\r\nGeneral options:\r\n -help               Display this summary\r\n -engine val         Use engine, possibly a hardware device\r\n\r\nInput options:\r\n -3                  (deprecated) Use 3 for the E value\r\n -F4                 Use the Fermat number F4 (0x10001) for the E value\r\n -f4                 Use the Fermat number F4 (0x10001) for the E value\r\n\r\nOutput options:\r\n -out outfile        Output the key to specified file\r\n -passout val        Output file pass phrase source\r\n -primes +int        Specify number of primes\r\n -verbose            Verbose output\r\n -traditional        Use traditional format for private keys\r\n -*                  Encrypt the output with any supported cipher\r\n\r\nRandom state options:\r\n -rand val           Load the given file(s) into the random number generator\r\n -writerand outfile  Write random data to the specified file\r\n\r\nProvider options:\r\n -provider-path val  Provider load path (must be before 'provider' argument if required)\r\n -provider val       Provider to load (can be specified multiple times)\r\n -propquery val      Property query used when fetching algorithms\r\n\r\nParameters:\r\n numbits             Size of key in bits\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e00\uff1a\u751f\u6210\u65e0\u5bc6\u7801\u4e141024\u5b57\u8282\u957f\u5ea6\u7684\u79c1\u94a5"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"openssl genrsa -out private.pem 1024 -verbose\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e8c\uff1a\u751f\u6210\u5e26\u5bc6\u7801\u7684\u79c1\u94a5\uff08genrsa\u751f\u6210\u7684\u79c1\u94a5\u683c\u5f0f\u90fd\u662fPEM\u683c\u5f0f\uff09--PEM\u3001DER\u683c\u5f0f\u533a\u522b"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u4f7f\u7528aes-128-cbc\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u5bf9\u79c1\u94a5\u8fdb\u884c\u52a0\u5bc6\u5904\u7406\uff0c\u547d\u4ee4\u6267\u884c\u4e4b\u540e\u4f1a\u63d0\u793a\u8f93\u5165\u5bc6\u7801\r\nopenssl genrsa -aes-128-cbc -out pri.pem -verbose\n"})}),"\n",(0,i.jsx)(n.h4,{id:"2openssl\u5b50\u547d\u4ee4rsa\u7528\u4e8e\u5904\u7406rsa\u5bc6\u94a5\u63d0\u53d6\u516c\u94a5\u7ba1\u7406\u4fdd\u62a4\u5bc6\u7801\u683c\u5f0f\u8f6c\u6362\u548c\u6253\u5370\u4fe1\u606f",children:"\uff082\uff09openssl\u5b50\u547d\u4ee4rsa\u7528\u4e8e\u5904\u7406rsa\u5bc6\u94a5\uff08\u63d0\u53d6\u516c\u94a5\u3001\u7ba1\u7406\u4fdd\u62a4\u5bc6\u7801\uff09\u3001\u683c\u5f0f\u8f6c\u6362\u548c\u6253\u5370\u4fe1\u606f\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ openssl rsa --help\r\nUsage: rsa [options]\r\n\r\nGeneral options:\r\n -help               Display this summary\r\n -check              Verify key consistency\r\n -*                  Any supported cipher\r\n -engine val         Use engine, possibly a hardware device\r\n\r\nInput options:\r\n -in val             Input file\r\n -inform format      Input format (DER/PEM/P12/ENGINE\r\n -pubin              Expect a public key in input file\r\n -RSAPublicKey_in    Input is an RSAPublicKey\r\n -passin val         Input file pass phrase source\r\n\r\nOutput options:\r\n -out outfile        Output file\r\n -outform format     Output format, one of DER PEM PVK\r\n -pubout             Output a public key\r\n -RSAPublicKey_out   Output is an RSAPublicKey\r\n -passout val        Output file pass phrase source\r\n -noout              Don't print key out\r\n -text               Print the key in text\r\n -modulus            Print the RSA key modulus\r\n -traditional        Use traditional format for private keys\r\n\r\nPVK options:\r\n -pvk-strong         Enable 'Strong' PVK encoding level (default)\r\n -pvk-weak           Enable 'Weak' PVK encoding level\r\n -pvk-none           Don't enforce PVK encoding\r\n\r\nProvider options:\r\n -provider-path val  Provider load path (must be before 'provider' argument if required)\r\n -provider val       Provider to load (can be specified multiple times)\r\n -propquery val      Property query used when fetching algorithms\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e00\uff1a\u79c1\u94a5\u6587\u4ef6\u5185\u5bb9\u67e5\u770b"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"openssl rsa -in priv.pem -text\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u793a\u4f8b\u4e8c\uff1a\u7ed9\u79d8\u94a5\u6dfb\u52a0/\u53bb\u9664/\u4fee\u6539\u5bf9\u79f0\u52a0\u5bc6\u7684\u5bc6\u7801\uff08\u6ce8\u610f\uff1a\u6b64\u5904\u6d89\u53ca\u5bc6\u7801\u8f93\u5165\u7684\u683c\u5f0f\u5747\u4e3apass",":pass_value","\uff09"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u4e3aRSA\u5bc6\u94a5\u589e\u52a0\u53e3\u4ee4\u4fdd\u62a4\r\nopenssl rsa -in RSA.pem -des3 -passout pass:123456 -out E_RSA.pem\r\n\r\n// \u4e3aRSA\u5bc6\u94a5\u53bb\u9664\u53e3\u4ee4\u4fdd\u62a4(\u53bb\u6389-passin\u9009\u9879\u4ea6\u53ef\uff0c\u53ea\u662f\u4f1a\u8be2\u95ee\u5bc6\u7801)\r\nopenssl rsa -in E_RSA.pem -passin pass:123456 -out P_RSA.pem\r\n\r\n// \u4fee\u6539\u52a0\u5bc6\u7b97\u6cd5\u4e3aaes128\uff0c\u53e3\u4ee4\u662f123456\r\nopenssl rsa -in RSA.pem -passin pass:123456 -aes128 -passout pass:123456 -out E_RSA.pem\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e09\uff1a\u5bc6\u94a5\u683c\u5f0f\u8f6c\u6362"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u628apem\u683c\u5f0f\u8f6c\u5316\u6210der\u683c\u5f0f\uff0c\u4f7f\u7528outform\u6307\u5b9ader\u683c\u5f0f\r\nopenssl rsa -in RSA.pem -passin pass:123456 -des -passout pass:123456 -outform der -out rsa.der\r\n\r\n\u6ce8\u610f\uff1aDER\u7528\u4e8c\u8fdb\u5236\u7f16\u7801\u7684\u8bc1\u4e66\uff0cPEM\u7528ASCLL(BASE64)\u7f16\u7801\u7684\u8bc1\u4e66\uff0c\u4e00\u822c\u9ed8\u8ba4\u90fd\u662fPEM\u683c\u5f0f\u3002\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u56db\uff1a\u516c\u94a5\u63d0\u53d6"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"openssl rsa -in private.pem -pubout -out public.pem\n"})}),"\n",(0,i.jsx)(n.h4,{id:"3openssl\u5b50\u547d\u4ee4rsautl\u80fd\u591f\u4f7f\u7528rsa\u7b97\u6cd5\u7b7e\u540d\u9a8c\u8bc1\u8eab\u4efd\u52a0\u5bc6\u89e3\u5bc6\u6570\u636e",children:"\uff083\uff09openssl\u5b50\u547d\u4ee4rsautl\u80fd\u591f\u4f7f\u7528RSA\u7b97\u6cd5\u7b7e\u540d\u3001\u9a8c\u8bc1\u8eab\u4efd\u3001\u52a0\u5bc6/\u89e3\u5bc6\u6570\u636e\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ openssl rsautl --help\r\nThe command rsautl was deprecated in version 3.0. Use 'pkeyutl' instead.\r\nUsage: rsautl [options]\r\n\r\nGeneral options:\r\n -help                    Display this summary\r\n -sign                    Sign with private key\r\n -verify                  Verify with public key\r\n -encrypt                 Encrypt with public key\r\n -decrypt                 Decrypt with private key\r\n -engine val              Use engine, possibly a hardware device\r\n\r\nInput options:\r\n -in infile               Input file\r\n -inkey val               Input key\r\n -keyform PEM|DER|ENGINE  Private key format (ENGINE, other values ignored)\r\n -pubin                   Input is an RSA public\r\n -certin                  Input is a cert carrying an RSA public key\r\n -rev                     Reverse the order of the input buffer\r\n -passin val              Input file pass phrase source\r\n\r\nOutput options:\r\n -out outfile             Output file\r\n -raw                     Use no padding\r\n -pkcs                    Use PKCS#1 v1.5 padding (default)\r\n -x931                    Use ANSI X9.31 padding\r\n -oaep                    Use PKCS#1 OAEP\r\n -asn1parse               Run output through asn1parse; useful with -verify\r\n -hexdump                 Hex dump output\r\n\r\nRandom state options:\r\n -rand val                Load the given file(s) into the random number generator\r\n -writerand outfile       Write random data to the specified file\r\n\r\nProvider options:\r\n -provider-path val       Provider load path (must be before 'provider' argument if required)\r\n -provider val            Provider to load (can be specified multiple times)\r\n -propquery val           Property query used when fetching algorithms\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e00\uff1a\u4f7f\u7528\u516c\u79c1\u94a5\u52a0\u89e3\u5bc6\u6587\u4ef6"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u7528\u516c\u94a5\u52a0\u5bc6\u6587\u4ef6\r\nopenssl rsautl -encrypt -in plain.text -inkey public.pem -out encrypt.text \r\n// \u7528\u79c1\u94a5\u89e3\u5bc6\u6587\u4ef6\r\nopenssl rsautl -decrypt -in encrypt.text -inkey private.pem -out replain.text\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e8c\uff1a\u4f7f\u7528\u516c\u79c1\u94a5\u7b7e\u540d/\u9a8c\u7b7e\u6587\u4ef6\uff08\u6b64\u5904\u7684\u7b7e\u540d\u8fc7\u7a0b\u662f\u9488\u5bf9\u6587\u4ef6\u7684\uff0c\u6545\u4e0d\u6d89\u53cahash\u8ba1\u7b97\u6b65\u9aa4\uff09"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u7528\u79c1\u94a5\u7b7e\u540d\r\nopenssl rsautl -sign -in plain.text -inkey private.pem -out signed.text\r\n// \u7528\u516c\u94a5\u9a8c\u7b7e\r\nopenssl rsautl -verify -in signed.text -pubin -inkey public.pem -out verify.text\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\u4fe1\u606f\u6458\u8981",children:(0,i.jsx)("div",{id:"xinxizhaiyao",children:"\u4fe1\u606f\u6458\u8981"})}),"\n",(0,i.jsxs)(n.p,{children:["\u4fe1\u606f\u6458\u8981\u7b97\u6cd5\u662f\u5c06\u4efb\u610f\u957f\u5ea6\u7684\u6570\u636e\u8f6c\u6362\u6210\u56fa\u5b9a\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u7684\u8fc7\u7a0b\uff0c\u5b83\u901a\u5e38\u7528\u4e8e\u9a8c\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027\u548c\u4e00\u81f4\u6027\uff0c\u8fd9\u7c7b\u7b97\u6cd5\u53ef\u901a\u8fc7\u547d\u4ee4",(0,i.jsx)(n.code,{children:"openssl list -digest-commands"}),"\u5177\u4f53\u67e5\u770b\u3002"]}),"\n",(0,i.jsx)(n.h4,{id:"xopenssl\u5b50\u547d\u4ee4dgst\u4e3a\u4fe1\u606f\u6458\u8981\u8ba1\u7b97\u5de5\u5177",children:"\uff08x\uff09openssl\u5b50\u547d\u4ee4dgst\u4e3a\u4fe1\u606f\u6458\u8981\u8ba1\u7b97\u5de5\u5177\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ openssl dgst --help\r\nUsage: dgst [options] [file...]\r\n\r\nGeneral options:\r\n -help               Display this summary\r\n -list               List digests\r\n -engine val         Use engine e, possibly a hardware device\r\n -engine_impl        Also use engine given by -engine for digest operations\r\n -passin val         Input file pass phrase source\r\n\r\nOutput options:\r\n -c                  Print the digest with separating colons\r\n -r                  Print the digest in coreutils format\r\n -out outfile        Output to filename rather than stdout\r\n -keyform format     Key file format (ENGINE, other values ignored)\r\n -hex                Print as hex dump\r\n -binary             Print in binary form\r\n -xoflen +int        Output length for XOF algorithms\r\n -d                  Print debug info\r\n -debug              Print debug info\r\n\r\nSigning options:\r\n -sign val           Sign digest using private key\r\n -verify val         Verify a signature using public key\r\n -prverify val       Verify a signature using private key\r\n -sigopt val         Signature parameter in n:v form\r\n -signature infile   File with signature to verify\r\n -hmac val           Create hashed MAC with key\r\n -mac val            Create MAC (not necessarily HMAC)\r\n -macopt val         MAC algorithm parameters in n:v form or key\r\n -*                  Any supported digest\r\n -fips-fingerprint   Compute HMAC with the key used in OpenSSL-FIPS fingerprint\r\n\r\nRandom state options:\r\n -rand val           Load the given file(s) into the random number generator\r\n -writerand outfile  Write random data to the specified file\r\n\r\nProvider options:\r\n -provider-path val  Provider load path (must be before 'provider' argument if required)\r\n -provider val       Provider to load (can be specified multiple times)\r\n -propquery val      Property query used when fetching algorithms\r\n\r\nParameters:\r\n file                Files to digest (optional; default is stdin)\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e00\uff1a\u8ba1\u7b97\u6587\u4ef6\u6458\u8981"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u8ba1\u7b97\u6587\u4ef6\u7684md5\u503c\r\nopenssl dgst -md5 test.txt\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e8c\uff1a\u6587\u4ef6\u7b7e\u540d\u53ca\u9a8c\u7b7e\uff08\u6b64\u5904\u7684\u7b7e\u540d\u662f\u9488\u5bf9\u6587\u4ef6\u7684hash\u503c\u8fdb\u884c\u7684\uff0c\u6545\u4e00\u5b9a\u4f1a\u7ecf\u5386hash\u8ba1\u7b97\u6b65\u9aa4\uff09"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u4f7f\u7528private.pem\u79c1\u94a5\u5bf9\u6587\u4ef6plain.txt\u7684\u54c8\u5e0c\u503c\u8fdb\u884c\u7b7e\u540d\u5e76\u8f93\u51fa\u5230test.text\u6587\u4ef6\r\nopenssl dgst -sign private.pem -out test.text plain.text\r\n// \u4f7f\u7528public.pem\u516c\u94a5\u5bf9\u7b7e\u540d\u6587\u4ef6\u8fdb\u884c\u9a8c\u7b7e\r\nopenssl dgst -verify public.pem -signature test.text plain.text\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\u6570\u5b57\u8bc1\u4e66",children:(0,i.jsx)("div",{id:"shuzizhengshu",children:"\u6570\u5b57\u8bc1\u4e66"})}),"\n",(0,i.jsx)(n.p,{children:"\u6570\u5b57\u8bc1\u4e66\u5c31\u662f\u7528\u4e00\u4e2a\u6743\u5a01\u7684\u79c1\u94a5\uff08\u4e00\u822c\u662fCA\u6839\u7684\u79c1\u94a5\uff09\u5bf9\u53e6\u4e00\u4e2a\u7b2c\u4e09\u65b9\u516c\u53f8\u7684\u516c\u94a5\u8bc1\u4e66\uff08\u5373\u8bc1\u4e66\u8bf7\u6c42\uff0c\u5305\u542b\u516c\u53f8\u4fe1\u606f\u3001\u7f51\u5740\u3001\u81ea\u751f\u6210\u7684\u516c\u94a5\uff09\u8fdb\u884c\u7b7e\u540d\u6765\u63d0\u5347\u7b2c\u4e09\u65b9\u516c\u94a5\u8bc1\u4e66\u7684\u53ef\u4fe1\u5ea6\u3002"}),"\n",(0,i.jsx)(n.h4,{id:"1openssl\u5b50\u547d\u4ee4req\u7528\u4e8e\u751f\u6210\u548c\u5904\u7406\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6\u53ca\u8bc1\u4e66",children:"\uff081\uff09openssl\u5b50\u547d\u4ee4req\u7528\u4e8e\u751f\u6210\u548c\u5904\u7406\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6\u53ca\u8bc1\u4e66"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ openssl req --help\r\nUsage: req [options]\r\n\r\nGeneral options:\r\n -help                 Display this summary\r\n -engine val           Use engine, possibly a hardware device\r\n -keygen_engine val    Specify engine to be used for key generation operations\r\n -in infile            X.509 request input file (default stdin)\r\n -inform PEM|DER       Input format - DER or PEM\r\n -verify               Verify self-signature on the request\r\n\r\nCertificate options:\r\n -new                  New request\r\n -config infile        Request template file\r\n -section val          Config section to use (default \"req\")\r\n -utf8                 Input characters are UTF8 (default ASCII)\r\n -nameopt val          Certificate subject/issuer name printing options\r\n -reqopt val           Various request text options\r\n -text                 Text form of request\r\n -x509                 Output an X.509 certificate structure instead of a cert request\r\n -CA infile            Issuer cert to use for signing a cert, implies -x509\r\n -CAkey val            Issuer private key to use with -CA; default is -CA arg\r\n                       (Required by some CA's)\r\n -subj val             Set or modify subject of request or cert\r\n -subject              Print the subject of the output request or cert\r\n -multivalue-rdn       Deprecated; multi-valued RDNs support is always on.\r\n -days +int            Number of days cert is valid for\r\n -set_serial val       Serial number to use\r\n -copy_extensions val  copy extensions from request when using -x509\r\n -addext val           Additional cert extension key=value pair (may be given more than once)\r\n -extensions val       Cert extension section (override value in config file)\r\n -reqexts val          Request extension section (override value in config file)\r\n -precert              Add a poison extension to the generated cert (implies -new)\r\n\r\nKeys and Signing options:\r\n -key val              Key for signing, and to include unless -in given\r\n -keyform format       Key file format (ENGINE, other values ignored)\r\n -pubkey               Output public key\r\n -keyout outfile       File to write private key to\r\n -passin val           Private key and certificate password source\r\n -passout val          Output file pass phrase source\r\n -newkey val           Generate new key with [<alg>:]<nbits> or <alg>[:<file>] or param:<file>\r\n -pkeyopt val          Public key options as opt:value\r\n -sigopt val           Signature parameter in n:v form\r\n -vfyopt val           Verification parameter in n:v form\r\n -*                    Any supported digest\r\n\r\nOutput options:\r\n -out outfile          Output file\r\n -outform PEM|DER      Output format - DER or PEM\r\n -batch                Do not ask anything during request generation\r\n -verbose              Verbose output\r\n -noenc                Don't encrypt private keys\r\n -nodes                Don't encrypt private keys; deprecated\r\n -noout                Do not output REQ\r\n -newhdr               Output \"NEW\" in the header lines\r\n -modulus              RSA modulus\r\n\r\nRandom state options:\r\n -rand val             Load the given file(s) into the random number generator\r\n -writerand outfile    Write random data to the specified file\r\n\r\nProvider options:\r\n -provider-path val    Provider load path (must be before 'provider' argument if required)\r\n -provider val         Provider to load (can be specified multiple times)\r\n -propquery val        Property query used when fetching algorithms\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e00\uff1a\u751f\u6210\u4e00\u4e2a\u8bc1\u4e66\u8bf7\u6c42"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u4f7f\u7528\u5df2\u6709\u7684private.pem\u79c1\u94a5\u53bb\u751f\u6210\u4e00\u4e2a\u8bc1\u4e66\u8bf7\u6c42\u3002\uff08\u6709\u4e2a\u4eba\u4fe1\u606f\u95ee\u7b54\u73af\u8282\uff09\r\nopenssl req -new -key private.pem -out request.csr\r\n\r\n// \u4f7f\u7528\u81ea\u52a8\u751f\u6210\u7684RSA\u79c1\u94a5\u53bb\u751f\u6210\u4e00\u4e2a\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6\u3002\uff08\u6709\u4e2a\u4eba\u4fe1\u606f\u95ee\u7b54\u73af\u8282\uff09\r\nopenssl req -new -out request.csr\r\n\r\n// \u81ea\u52a8\u751f\u62101024\u4f4d\u4e14\u4e0d\u52a0\u5bc6\u5e76\u8f93\u51fa\u4e3aRSA.pem\u7684\u79c1\u94a5\uff0c\u4ee5\u53ca\u751f\u6210\u514d\u95ee\u7b54\u7684\u8bc1\u4e66\u8bf7\u6c42client.csr\u3002\r\nopenssl req -new -newkey rsa:1024 -nodes -out client.csr -keyout RSA.pem -subj /C=AU/ST=Some-State/O=Internet\r\n\r\n// \u5feb\u901f\u751f\u6210\u8bc1\u4e66\u8bf7\u6c42\uff0c\u8df3\u8fc7\u4e86\u79c1\u94a5\u52a0\u5bc6\u8bf7\u6c42\u53ca\u4e2a\u4eba\u4fe1\u606f\u95ee\u7b54\u73af\u8282\u3002\r\nopenssl req -new -nodes -out request.csr -batch\r\n\r\n\u6ce8\u610f\uff1a\u751f\u6210\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6\u867d\u7136\u4e00\u5b9a\u9700\u8981RSA\u79c1\u94a5\u7684\u53c2\u4e0e\uff0c\u4f46\u8bf7\u6c42\u6587\u4ef6\u7684\u5185\u5bb9\u4e2d\u5e76\u672a\u5d4c\u5165\u79c1\u94a5\u7684\u4fe1\u606f\uff0c\u53ea\u6709\u4ece\u79c1\u94a5\u4e2d\u63d0\u53d6\u51fa\u6765\u7684\u516c\u94a5\u3002\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e8c\uff1a\u67e5\u770b\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6\u7684\u5185\u5bb9\u4fe1\u606f"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"openssl req -in request.csr -text\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\u4e09\uff1a\u4ece\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6\u4e2d\u63d0\u53d6\u516c\u94a5"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"openssl req -in client.csr -pubkey -noout >pub.pem\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u793a\u4f8b\u56db\uff1a\u751f\u6210\u81ea\u7b7e\u540d\u8bc1\u4e66\uff08\u5373\u6839CA\uff0c\u53ef\u4ee5\u62ff\u6765\u7ed9\u5176\u4ed6\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6\u505a\u8bc1\u4e66\u7b7e\u540d\uff0c\u5373\u8bc1\u4e66\u9881\u53d1\uff0c",(0,i.jsx)(n.strong,{children:"\u4f46\u662f\u4e0d\u80fd\u7528\u6765\u5f53\u4f5c HTTPS \u7684\u8bc1\u4e66\u4f7f\u7528\uff0c\u56e0\u4e3a Web Server \u53ea\u8ba4\u670d\u52a1\u5668\u8bc1\u4e66\u7c7b\u578b\uff0c\u4e0d\u8ba4\u6839\u8bc1\u4e66\u7c7b\u578b\u3002"}),"\uff09"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'// \u9996\u5148\u751f\u6210\u4e00\u4e2a\u79c1\u94a5ca.pem\uff0c\u7136\u540e\u6839\u636e\u79c1\u94a5\u76f4\u63a5\u751f\u6210\u4e00\u4e2a\u81ea\u7b7e\u6839\u8bc1\u4e66ca.cer\r\nopenssl genrsa -out ca.pem 2048\r\nopenssl req -new -x509 -days 365 -key ca.pem -subj "/C=CN/ST=GD/L=SZ/O=Acme, Inc./CN=Acme Root CA" -out ca.cer\r\n\r\n// \u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u81ea\u7b7e\u8bc1\u4e66mycert.cer\u548c\u5b83\u7684\u79c1\u94a5prvi.pem\uff08\u4f1a\u8be2\u95ee\u4e2a\u4eba\u4fe1\u606f\uff09\r\nopenssl req -x509 -nodes -days 365 -sha256 -newkey rsa:2048 -keyout prvi.pem -out mycert.cer\r\n\r\n// \u5feb\u6377\u9a8c\u8bc1\u751f\u6210\u7684\u8bc1\u4e66\u662f\u5426\u6709\u6548\uff0c\u7f51\u5740 https://localhost:4433\u3002\uff08-cert\u6240\u9700\u7684\u6587\u4ef6\u662f\u4e00\u4e2a\u79c1\u94a5\u4e0e\u8bc1\u4e66\u7684\u7ed3\u5408\u4f53\uff0c\u5373 cat prvi.pem mycert.cer > mycert.pem\uff09\r\nopenssl s_server -cert mycert.pem -www -accept 4433\r\n\r\n\u6ce8\u610f\uff1a\u547d\u4ee4\u4e2d\u7684\u540e\u7f00pem\u3001csr\u3001cer\u53ea\u662f\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\u6587\u4ef6\u7684\u7c7b\u578b\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528\u53ef\u4ee5\u662f\u4efb\u610f\u503c\u3002\u4f46\u5728windows\u6216\u5176\u4ed6\u4e00\u4e9b\u5e94\u7528\u4e2d\u4f7f\u7528\u7684\u8bdd\u5c31\u9700\u8981\u6ce8\u610f\u4e86\u3002\n'})}),"\n",(0,i.jsx)(n.h4,{id:"2openssl\u5b50\u547d\u4ee4x509\u547d\u4ee4\u662f\u4e00\u4e2a\u591a\u7528\u9014\u7684\u8bc1\u4e66\u5de5\u5177\u5b83\u53ef\u4ee5\u663e\u793a\u8bc1\u4e66\u4fe1\u606f\u8f6c\u6362\u8bc1\u4e66\u683c\u5f0f\u7b7e\u540d\u8bc1\u4e66\u8bf7\u6c42\u4ee5\u53ca\u6539\u53d8\u8bc1\u4e66\u7684\u4fe1\u4efb\u8bbe\u7f6e\u7b49",children:"\uff082\uff09openssl\u5b50\u547d\u4ee4X509\u547d\u4ee4\u662f\u4e00\u4e2a\u591a\u7528\u9014\u7684\u8bc1\u4e66\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u663e\u793a\u8bc1\u4e66\u4fe1\u606f\u3001\u8f6c\u6362\u8bc1\u4e66\u683c\u5f0f\u3001\u7b7e\u540d\u8bc1\u4e66\u8bf7\u6c42\u4ee5\u53ca\u6539\u53d8\u8bc1\u4e66\u7684\u4fe1\u4efb\u8bbe\u7f6e\u7b49\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ openssl x509 --help\r\nUsage: x509 [options]\r\n\r\nGeneral options:\r\n -help                      Display this summary\r\n -in infile                 Certificate input, or CSR input file with -req (default stdin)\r\n -passin val                Private key and cert file pass-phrase source\r\n -new                       Generate a certificate from scratch\r\n -x509toreq                 Output a certification request (rather than a certificate)\r\n -req                       Input is a CSR file (rather than a certificate)\r\n -copy_extensions val       copy extensions when converting from CSR to x509 or vice versa\r\n -inform format             CSR input file format (DER or PEM) - default PEM\r\n -vfyopt val                CSR verification parameter in n:v form\r\n -key val                   Key for signing, and to include unless using -force_pubkey\r\n -signkey val               Same as -key\r\n -keyform PEM|DER|ENGINE    Key input format (ENGINE, other values ignored)\r\n -out outfile               Output file - default stdout\r\n -outform format            Output format (DER or PEM) - default PEM\r\n -nocert                    No cert output (except for requested printing)\r\n -noout                     No output (except for requested printing)\r\n\r\nCertificate printing options:\r\n -text                      Print the certificate in text form\r\n -dateopt val               Datetime format used for printing. (rfc_822/iso_8601). Default is rfc_822.\r\n -certopt val               Various certificate text printing options\r\n -fingerprint               Print the certificate fingerprint\r\n -alias                     Print certificate alias\r\n -serial                    Print serial number value\r\n -startdate                 Print the notBefore field\r\n -enddate                   Print the notAfter field\r\n -dates                     Print both notBefore and notAfter fields\r\n -subject                   Print subject DN\r\n -issuer                    Print issuer DN\r\n -nameopt val               Certificate subject/issuer name printing options\r\n -email                     Print email address(es)\r\n -hash                      Synonym for -subject_hash (for backward compat)\r\n -subject_hash              Print subject hash value\r\n -subject_hash_old          Print old-style (MD5) subject hash value\r\n -issuer_hash               Print issuer hash value\r\n -issuer_hash_old           Print old-style (MD5) issuer hash value\r\n -ext val                   Restrict which X.509 extensions to print and/or copy\r\n -ocspid                    Print OCSP hash values for the subject name and public key\r\n -ocsp_uri                  Print OCSP Responder URL(s)\r\n -purpose                   Print out certificate purposes\r\n -pubkey                    Print the public key in PEM format\r\n -modulus                   Print the RSA key modulus\r\n\r\nCertificate checking options:\r\n -checkend intmax           Check whether cert expires in the next arg seconds\r\n                            Exit 1 (failure) if so, 0 if not\r\n -checkhost val             Check certificate matches host\r\n -checkemail val            Check certificate matches email\r\n -checkip val               Check certificate matches ipaddr\r\n\r\nCertificate output options:\r\n -set_serial val            Serial number to use, overrides -CAserial\r\n -next_serial               Increment current certificate serial number\r\n -days int                  Number of days until newly generated certificate expires - default 30\r\n -preserve_dates            Preserve existing validity dates\r\n -subj val                  Set or override certificate subject (and issuer)\r\n -force_pubkey infile       Place the given key in new certificate\r\n -clrext                    Do not take over any extensions from the source certificate or request\r\n -extfile infile            Config file with X509V3 extensions to add\r\n -extensions val            Section of extfile to use - default: unnamed section\r\n -sigopt val                Signature parameter, in n:v form\r\n -badsig                    Corrupt last byte of certificate signature (for test)\r\n -*                         Any supported digest, used for signing and printing\r\n\r\nMicro-CA options:\r\n -CA infile                 Use the given CA certificate, conflicts with -key\r\n -CAform PEM|DER            CA cert format (PEM/DER/P12); has no effect\r\n -CAkey val                 The corresponding CA key; default is -CA arg\r\n -CAkeyform PEM|DER|ENGINE  CA key format (ENGINE, other values ignored)\r\n -CAserial val              File that keeps track of CA-generated serial number\r\n -CAcreateserial            Create CA serial number file if it does not exist\r\n\r\nCertificate trust output options:\r\n -trustout                  Mark certificate PEM output as trusted\r\n -setalias val              Set certificate alias (nickname)\r\n -clrtrust                  Clear all trusted purposes\r\n -addtrust val              Trust certificate for a given purpose\r\n -clrreject                 Clears all the prohibited or rejected uses of the certificate\r\n -addreject val             Reject certificate for a given purpose\r\n\r\nRandom state options:\r\n -rand val                  Load the given file(s) into the random number generator\r\n -writerand outfile         Write random data to the specified file\r\n -engine val                Use engine, possibly a hardware device\r\n\r\nProvider options:\r\n -provider-path val         Provider load path (must be before 'provider' argument if required)\r\n -provider val              Provider to load (can be specified multiple times)\r\n -propquery val             Property query used when fetching algorithms\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u793a\u4f8b\u4e00\uff1a\u4f7f\u7528\u81ea\u7b7e\u6839\u8bc1\u4e66\u4e3a\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6\u7b7e\u540d\uff08\u5373\u751f\u6210 HTTPS \u53ef\u7528\u7684\u8bc1\u4e66\uff09\r\n\u6ce8\uff1a",(0,i.jsx)(n.strong,{children:"\u8bc1\u4e66\u751f\u6210\u7f51\u7ad9"})," ",(0,i.jsx)(n.a,{href:"https://www.ssleye.com/",children:"ssleye"}),"\u3001",(0,i.jsx)(n.a,{href:"https://bkssl.com/",children:"bkssl"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'// \u751f\u6210\u8bf7\u6c42\u6587\u4ef6server.csr\uff0c\u7136\u540e\u4f7f\u7528\u81ea\u7b7e\u540d\u6839\u8bc1\u4e66ca.cer\u53ca\u5176\u79c1\u94a5ca.pem\u4e3a\u5176\u7b7e\u540d\u751f\u6210\u7b7e\u540d\u8bc1\u4e66server.cer\r\nopenssl req -newkey rsa:2048 -nodes -keyout server.pem -subj "/C=CN/ST=GD/L=SZ/O=Acme, Inc./CN=localhost" -out server.csr\r\nopenssl x509 -sha256 -req  -days 365 -in server.csr -CA ca.cer -CAkey ca.pem -CAcreateserial -out server.cer\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:r(70687).A+"",width:"1920",height:"1080"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\u6742\u9879",children:(0,i.jsx)("div",{id:"zaxaing",children:"\u6742\u9879"})}),"\n",(0,i.jsx)(n.h4,{id:"1openssl\u5b50\u547d\u4ee4rand\u7528\u4e8e\u751f\u6210\u4f2a\u968f\u673a\u6570",children:"\uff081\uff09openssl\u5b50\u547d\u4ee4rand\u7528\u4e8e\u751f\u6210\u4f2a\u968f\u673a\u6570"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u751f\u62103\u4e2a\u5b57\u8282\u7684\u968f\u673a\u6570\r\nopenssl rand -hex 3\r\n\r\n\u6ce8\u610f\uff1a\u7531\u4e8e\u751f\u6210\u662f\u968f\u673a\u7684\u5b57\u8282\uff0c\u56e0\u6b64\u5982\u679c\u4e0d\u901a\u8fc7-base64\u6216-hex\u7f16\u7801\u7684\u8bdd\u8f93\u51fa\u4f1a\u663e\u793a\u4e71\u7801\u3002\n"})}),"\n",(0,i.jsx)(n.h4,{id:"2openssl\u5b50\u547d\u4ee4passwd\u7528\u4e8e\u751f\u6210linux\u7528\u6237\u8d26\u6237\u7684\u5bc6\u7801\u683c\u5f0f",children:"\uff082\uff09openssl\u5b50\u547d\u4ee4passwd\u7528\u4e8e\u751f\u6210Linux\u7528\u6237\u8d26\u6237\u7684\u5bc6\u7801\u683c\u5f0f"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u5bf9\u660e\u6587\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u5904\u7406\r\nopenssl passwd 12345\r\n\r\n// \u4f7f\u7528\u76d0\u503c\u8fdb\u884c\u5bc6\u7801\u52a0\u5bc6\uff08\u9ed8\u8ba4\u76d0\u503c\u4e0d\u56fa\u5b9a\uff0c\u5bfc\u81f4\u540c\u4e00\u6761\u547d\u4ee4\u6bcf\u6b21\u6267\u884c\u90fd\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u7ed3\u679c\uff09\r\nopenssl passwd -salt 'z' 12345\n"})}),"\n",(0,i.jsx)(n.h4,{id:"3openssl\u5b50\u547d\u4ee4verify\u7528\u4e8e\u9a8c\u8bc1\u6388\u6743\u673a\u6784\u9881\u53d1\u7684\u8bc1\u4e66",children:"\uff083\uff09openssl\u5b50\u547d\u4ee4verify\u7528\u4e8e\u9a8c\u8bc1\u6388\u6743\u673a\u6784\u9881\u53d1\u7684\u8bc1\u4e66"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"openssl verify cert.pem\r\n\r\n// \u8f93\u51fa\u5982\u4e0b\uff0c\u5219\u8868\u793a\uff1a\u9a8c\u8bc1\u6210\u529f\r\nOK\r\n\r\n// \u8f93\u51fa\u5982\u4e0b\uff0c\u5219\u8868\u793a\uff1a\u8bc1\u4e66\u8fc7\u671f\uff0c\u901a\u5e38\u8bc1\u4e66\u90fd\u662f\u6709\u6709\u6548\u671f\u7684\uff0c\u4e00\u822c\u662f\u4e00\u5e74\r\nerror 10 at 0 depth lookup:certificate has expired\r\n\r\n// \u8f93\u51fa\u5982\u4e0b\uff0c\u5219\u8868\u793a\uff1a\u81ea\u7b7e\u540d\u8bc1\u4e66\r\nerror 18 at 0 depth lookup:self signed certificate\n"})}),"\n",(0,i.jsx)(n.h4,{id:"4-openssl\u5b50\u547d\u4ee4s_server\u548cs_client\u7684\u4f7f\u7528",children:"\uff084\uff09 openssl\u5b50\u547d\u4ee4s_server\u548cs_client\u7684\u4f7f\u7528"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// \u8fd0\u884c\u4e00\u4e2aTLS\u670d\u52a1\u7aef\r\nopenssl s_server -cert mycert.pem -www -accept 4433\r\n\r\n// \u5411TLS\u670d\u52a1\u7aef\u53d1\u8d77\u8fde\u63a5\r\nopenssl s_client -connect remote.host:4433\n"})}),"\n",(0,i.jsx)(n.h4,{id:"5\u53c2\u8003\u6587\u6863",children:"\uff085\uff09\u53c2\u8003\u6587\u6863"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://juejin.cn/post/6844903989469773832#heading-23",children:"\u5bc6\u7801\u5b66\u57fa\u7840"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.cnblogs.com/zhi-leaf/p/11987394.html",children:"\u4f7f\u7528OpenSSL\u8bc1\u4e66\u64cd\u4f5c\u8be6\u89e3"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.open-ssl.cn/index/cate/32.html",children:"OpenSSL \u4e2d\u6587\u624b\u518c"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.cnblogs.com/kqdssheng/p/17623026.html",children:"\u300a\u56fe\u89e3\u5bc6\u7801\u6280\u672f\u300b\u8bfb\u540e\u603b\u7ed3"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/KaiZhang890/openssl-howto",children:"OpenSSL\u793a\u4f8b"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},70687:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/1503193-20240104180403033-1699879470-bb956063246e49b796b44f6aed4d4a6e.png"}}]);